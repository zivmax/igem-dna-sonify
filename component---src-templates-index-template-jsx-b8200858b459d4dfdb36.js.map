{"version":3,"file":"component---src-templates-index-template-jsx-b8200858b459d4dfdb36.js","mappings":"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","sources":["webpack://gatsby-starter-glass/./src/components/tags.jsx","webpack://gatsby-starter-glass/./src/components/seo.jsx","webpack://gatsby-starter-glass/./src/templates/index-template.jsx"],"sourcesContent":["import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"gatsby\";\n\nconst toKebabCase = (str) => {\n  return str\n    .match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)\n    .map((x) => x.toLowerCase())\n    .join(\"-\");\n};\n\nconst Tags = ({ tags }) => {\n  return (\n    <div>\n      {tags &&\n        tags.map((tag) => {\n          return (\n            <Tag key={tag}>\n              <Link to={`/tags/${toKebabCase(tag)}`}>{tag}</Link>\n            </Tag>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default Tags;\n\nconst Tag = styled.span`\n  margin-right: 0.6rem;\n  margin-bottom: 0.6rem;\n  text-transform: uppercase;\n  font-size: var(--size-300);\n\n  & a {\n    position: relative;\n    z-index: 2;\n    text-decoration: none;\n    color: inherit;\n    padding: 0.2rem 0.6rem;\n    border: 1px solid rgba(255, 255, 255, 1);\n    border-radius: 4px;\n  }\n\n  & a:hover {\n    background-color: rgba(255, 255, 255, 0.9);\n  }\n\n  body.light-mode & a {\n    backdrop-filter: blur(10px);\n    border: 1px solid rgba(255, 255, 255, 0.5);\n    background-color: rgba(255, 255, 255, 0.7);\n  }\n\n  body.light-mode & a:hover {\n    background-color: rgba(255, 255, 255, 1);\n  }\n\n  body.dark-mode & a {\n    background-color: #212122;\n    border: 1px solid #1a1a1b;\n    opacity: 0.8;\n  }\n`;\n","import * as React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nconst Seo = ({ description, lang = \"zh\", title }) => {\n  const { site } = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          openGraphImage\n          siteUrl\n          description\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `);\n\n  const metaDescription = description || site.siteMetadata.description;\n  const defaultTitle = site.siteMetadata?.title;\n\n  return (\n    <>\n      <html lang={lang} />\n      <title>{title ? `${title} | ${defaultTitle}` : defaultTitle}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta\n        property=\"og:image\"\n        content={`${site.siteMetadata.siteUrl}/${site.siteMetadata.openGraphImage}`}\n      />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n    </>\n  );\n}\n\n\nexport default Seo;\n","import * as React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport styled from \"styled-components\";\nimport Seo from \"../components/seo\";\nimport Tags from \"../components/tags\";\n\nconst PostTemplate = ({ data }) => {\n  const { frontmatter, html } = data.markdownRemark;\n\n  return (\n    <Layout>\n      <PostWrapper>\n        <article>\n          <PostTitle>{frontmatter.title}</PostTitle>\n          <PostDate>{frontmatter.date}</PostDate>\n\n          <PostContent dangerouslySetInnerHTML={{ __html: html }} />\n        </article>\n        <Tags tags={frontmatter.tags} />\n      </PostWrapper>\n    </Layout>\n  );\n};\nexport function Head({ data }) {\n  return (\n    <Seo\n      title={data.markdownRemark.frontmatter.title}\n      description={data.markdownRemark.frontmatter.description}\n      socialImage={data.markdownRemark.frontmatter.socialImage}\n    />\n  );\n}\nexport default PostTemplate;\n\nconst PostWrapper = styled.div`\n  padding-top: var(--size-900);\n  padding-bottom: var(--size-900);\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 70ch;\n  word-wrap: break-word;\n`;\n\nconst PostTitle = styled.h1`\n  font-size: var(--size-700);\n`;\n\nconst PostDate = styled.span`\n  font-size: var(--size-400);\n  display: block;\n  margin-top: 0.5rem;\n  text-transform: uppercase;\n`;\n\nconst PostContent = styled.section`\n  padding-top: var(--size-800);\n\n  & > * + * {\n    margin-top: var(--size-300);\n  }\n\n  & > p + p {\n    margin-top: var(--size-700);\n  }\n\n  * + h1,\n  * + h2,\n  * + h3 {\n    margin-top: var(--size-900);\n  }\n\n  h1 {\n    font-size: var(--size-700);\n  }\n\n  h2 {\n    font-size: var(--size-600);\n  }\n\n  h3 {\n    font-size: var(--size-500);\n  }\n\n  b,\n  strong {\n    font-weight: 600;\n  }\n\n  a {\n    color: inherit;\n    text-decoration: underline;\n    text-decoration-thickness: 0.125rem;\n  }\n\n  blockquote {\n    padding-left: var(--size-400);\n    border-left: 5px solid;\n    font-style: italic;\n  }\n\n  code {\n    font-family: \"Source Sans Pro\", monospace;\n    overflow-x: auto;\n    white-space: pre-wrap;\n  }\n\n  pre {\n    overflow-x: auto;\n    white-space: pre-wrap;\n    max-width: 100%;\n  }\n`;\n\nexport const pageQuery = graphql`\n  query PostBySlug($slug: String!, $prevSlug: String, $nextSlug: String) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        tags\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n\n    prev: markdownRemark(fields: { slug: { eq: $prevSlug } }) {\n      frontmatter {\n        title\n      }\n      fields {\n        slug\n      }\n    }\n\n    next: markdownRemark(fields: { slug: { eq: $nextSlug } }) {\n      frontmatter {\n        title\n      }\n      fields {\n        slug\n      }\n    }\n  }\n`;\n"],"names":["_ref","tags","React","map","tag","Tag","key","Link","to","str","match","x","toLowerCase","join","styled","span","withConfig","displayName","componentId","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","description","lang","title","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","siteUrl","openGraphImage","social","twitter","Head","_ref2","data","Seo","markdownRemark","frontmatter","socialImage","html","Layout","PostWrapper","PostTitle","PostDate","date","PostContent","dangerouslySetInnerHTML","__html","Tags","div","h1","section"],"sourceRoot":""}