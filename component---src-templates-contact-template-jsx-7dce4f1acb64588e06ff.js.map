{"version":3,"file":"component---src-templates-contact-template-jsx-7dce4f1acb64588e06ff.js","mappings":"0KA2BA,IAtBiBA,IAAgB,IAAf,MAAEC,GAAOD,EACzB,MAAME,EAAWD,EAAME,KAAIC,IAAmD,IAAlD,YAAEC,EAAW,OAAEC,EAAM,QAAEC,EAAO,WAAEC,GAAYJ,EACtE,MAAM,MAAEK,EAAK,KAAEC,EAAI,KAAEC,EAAI,YAAEC,GAAgBP,GACrC,KAAEQ,GAASP,EAEjB,OACEQ,EAAAA,cAACC,EAAY,CACXC,IAAKH,EACLH,KAAMA,EACND,MAAOA,EACPE,KAAMA,EACNE,KAAMA,EACNL,WAAYA,EACZI,YAAaA,EACbL,QAASA,GACT,IAIN,OAAOO,EAAAA,cAACG,EAAc,KAAEf,EAA0B,EAKpD,MAAMa,EAAeG,IAQd,IARe,MACpBT,EAAK,KACLE,EAAI,WACJH,EAAU,KACVE,EAAI,QACJH,EAAO,YACPK,EAAW,KACXC,GACDK,EACC,OACEJ,EAAAA,cAACK,EAAkB,KACjBL,EAAAA,cAACM,EAAAA,EAAI,CAACV,KAAMA,IAEZI,EAAAA,cAACO,EAAa,KACZP,EAAAA,cAACQ,EAAAA,KAAI,CAACC,GAAIV,GAAOJ,IAEnBK,EAAAA,cAACU,EAAe,CACdC,wBAAyB,CACvBC,OAAQd,GAAeL,KAG3BO,EAAAA,cAACa,EAAY,KACXb,EAAAA,cAAA,YAAOH,GAEPG,EAAAA,cAAA,YAAON,EAAW,UAED,EAInBS,EAAiBW,EAAAA,QAAOC,GAAEC,WAAA,CAAAC,YAAA,4BAAAC,YAAA,gBAATJ,CAAS,yMAe1BT,EAAqBS,EAAAA,QAAOK,GAAEH,WAAA,CAAAC,YAAA,gCAAAC,YAAA,gBAATJ,CAAS,4bA8B9BP,EAAgBO,EAAAA,QAAOM,GAAEJ,WAAA,CAAAC,YAAA,2BAAAC,YAAA,gBAATJ,CAAS,4OAuBzBJ,EAAkBI,EAAAA,QAAOO,EAACL,WAAA,CAAAC,YAAA,6BAAAC,YAAA,gBAARJ,CAAQ,gDAK1BD,EAAeC,EAAAA,QAAOQ,IAAGN,WAAA,CAAAC,YAAA,0BAAAC,YAAA,gBAAVJ,CAAU,0F,wDC1G/B,IAfa5B,IAAe,IAAd,KAAEU,GAAMV,EACpB,OACEc,EAAAA,cAAA,WACGJ,GACCA,EAAKP,KAAKkC,IACR,OACEvB,EAAAA,cAACwB,EAAG,CAACtB,IAAKqB,GACRvB,EAAAA,cAACQ,EAAAA,KAAI,CAACC,GAAI,SAdHgB,EAcwBF,EAbpCE,EACJC,MAAM,sEACNrC,KAAKsC,GAAMA,EAAEC,gBACbC,KAAK,QAU4CN,IAdjCE,KAeH,IAGR,EAMV,MAAMD,EAAMV,EAAAA,QAAOgB,KAAId,WAAA,CAAAC,YAAA,YAAAC,YAAA,gBAAXJ,CAAW,ojB,wECJvB,UAlBiB5B,IAAe,IAAd,KAAE6C,GAAM7C,EACxB,MAAMC,EAAQ4C,EAAKC,kBAAkBC,MAC/BC,EAAQH,EAAKI,eAAeC,KAC5BzC,EAAQoC,EAAKI,eAAe5C,YAAYI,MAE9C,OACEK,EAAAA,cAACqC,EAAAA,EAAM,CAAC1C,MAAOA,GACbK,EAAAA,cAACsC,EAAK,CACJ3B,wBAAyB,CACvBC,OAAQsB,KAIZlC,EAAAA,cAACZ,EAAAA,EAAQ,CAACD,MAAOA,IACV,EAMb,MAAMmD,EAAQxB,EAAAA,QAAOQ,IAAGN,WAAA,CAAAC,YAAA,0BAAAC,YAAA,cAAVJ,CAAU,sT","sources":["webpack://gatsby-starter-glass/./src/components/post-list.jsx","webpack://gatsby-starter-glass/./src/components/tags.jsx","webpack://gatsby-starter-glass/./src/templates/contact-template.jsx"],"sourcesContent":["import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"gatsby\";\nimport Tags from \"./tags\";\n\nconst PostList = ({ posts }) => {\n  const PostList = posts.map(({ frontmatter, fields, excerpt, timeToRead }) => {\n    const { title, tags, date, description } = frontmatter;\n    const { slug } = fields;\n\n    return (\n      <PostListItem\n        key={slug}\n        tags={tags}\n        title={title}\n        date={date}\n        slug={slug}\n        timeToRead={timeToRead}\n        description={description}\n        excerpt={excerpt}\n      />\n    );\n  });\n\n  return <StyledPostList>{PostList}</StyledPostList>;\n};\n\nexport default PostList;\n\nconst PostListItem = ({\n  title,\n  date,\n  timeToRead,\n  tags,\n  excerpt,\n  description,\n  slug,\n}) => {\n  return (\n    <StyledPostListItem>\n      <Tags tags={tags} />\n\n      <PostListTitle>\n        <Link to={slug}>{title}</Link>\n      </PostListTitle>\n      <PostListExcerpt\n        dangerouslySetInnerHTML={{\n          __html: description || excerpt,\n        }}\n      />\n      <PostListMeta>\n        <span>{date}</span>\n\n        <span>{timeToRead} mins</span>\n      </PostListMeta>\n    </StyledPostListItem>\n  );\n};\n\nconst StyledPostList = styled.ul`\n  padding: 0;\n  list-style: none;\n  display: grid;\n  justify-items: center;\n  grid-gap: var(--size-600);\n  grid-template-columns: repeat(auto-fit, minmax(35ch, 1fr));\n\n  @media screen and (max-width: 500px) {\n    & {\n      display: block;\n    }\n  }\n`;\n\nconst StyledPostListItem = styled.li`\n  display: flex;\n  padding: 1.5rem;\n  border-radius: 8px;\n  position: relative;\n  flex-direction: column;\n  transition: all 0.3s ease-out;\n\n  body.light-mode & {\n    backdrop-filter: blur(10px);\n    border: 1px solid rgba(255, 255, 255, 0.5);\n    background-color: rgba(255, 255, 255, 0.3);\n  }\n\n  body.light-mode &:hover {\n    background-color: rgba(255, 255, 255, 0.5);\n  }\n\n  body.dark-mode & {\n    background-color: #3b3b3c;\n    border: 1px solid #515151;\n  }\n\n  @media screen and (max-width: 500px) {\n    & {\n      margin-top: var(--size-600);\n    }\n  }\n`;\n\nconst PostListTitle = styled.h2`\n  line-height: 1.2;\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n  text-transform: capitalize;\n  font-size: var(--size-600);\n  font-weight: 700;\n\n  & a {\n    text-decoration: none;\n    color: inherit;\n  }\n\n  & a::after {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n  }\n`;\n\nconst PostListExcerpt = styled.p`\n  margin-top: auto;\n  font-size: var(--size-400);\n`;\n\nconst PostListMeta = styled.div`\n  margin-top: 2rem;\n\n  font-size: var(--size-300);\n  display: flex;\n  justify-content: space-between;\n`;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"gatsby\";\n\nconst toKebabCase = (str) => {\n  return str\n    .match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)\n    .map((x) => x.toLowerCase())\n    .join(\"-\");\n};\n\nconst Tags = ({ tags }) => {\n  return (\n    <div>\n      {tags &&\n        tags.map((tag) => {\n          return (\n            <Tag key={tag}>\n              <Link to={`/tags/${toKebabCase(tag)}`}>{tag}</Link>\n            </Tag>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default Tags;\n\nconst Tag = styled.span`\n  margin-right: 0.6rem;\n  margin-bottom: 0.6rem;\n  text-transform: uppercase;\n  font-size: var(--size-300);\n\n  & a {\n    position: relative;\n    z-index: 2;\n    text-decoration: none;\n    color: inherit;\n    padding: 0.2rem 0.6rem;\n    border: 1px solid rgba(255, 255, 255, 1);\n    border-radius: 4px;\n  }\n\n  & a:hover {\n    background-color: rgba(255, 255, 255, 0.9);\n  }\n\n  body.light-mode & a {\n    backdrop-filter: blur(10px);\n    border: 1px solid rgba(255, 255, 255, 0.5);\n    background-color: rgba(255, 255, 255, 0.7);\n  }\n\n  body.light-mode & a:hover {\n    background-color: rgba(255, 255, 255, 1);\n  }\n\n  body.dark-mode & a {\n    background-color: #212122;\n    border: 1px solid #1a1a1b;\n    opacity: 0.8;\n  }\n`;\n","import * as React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/layout';\nimport PostList from '../components/post-list';\nimport styled from 'styled-components';\n\nconst HomePage = ({ data }) => {\n  const posts = data.allMarkdownRemark.nodes;\n  const intro = data.markdownRemark.html;\n  const title = data.markdownRemark.frontmatter.title;\n\n  return (\n    <Layout title={title}>\n      <Intro\n        dangerouslySetInnerHTML={{\n          __html: intro,\n        }}\n      />\n\n      <PostList posts={posts} />\n    </Layout>\n  );\n};\n\nexport default HomePage;\n\nconst Intro = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-width: 60ch;\n  align-items: center;\n  margin-right: auto;\n  margin-left: auto;\n  margin-top: var(--size-800);\n  margin-bottom: var(--size-900);\n  text-align: center;\n\n  & p {\n    text-transform: capitalize;\n    font-size: var(--size-400);\n  }\n\n  @media screen and (max-width: 700px) {\n    & h1 {\n      font-size: var(--size-700);\n    }\n  }\n`;\n\nexport const pageQuery = graphql`\n  query($slug: String!) {\n  site {\n    siteMetadata {\n      title\n    }\n  }\n  allMarkdownRemark(\n    filter: {fields: {contentType: {eq: \"posts\"}}}\n    sort: {frontmatter: {date: DESC}}\n    limit: 9\n  ) {\n    nodes {\n      fields {\n        slug\n      }\n      excerpt\n      timeToRead\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        title\n        tags\n      }\n    }\n  }\n  markdownRemark(fields: {slug: {eq: $slug}}) {\n    html\n    frontmatter {\n      title\n    }\n  }\n}\n`;\n"],"names":["_ref","posts","PostList","map","_ref2","frontmatter","fields","excerpt","timeToRead","title","tags","date","description","slug","React","PostListItem","key","StyledPostList","_ref3","StyledPostListItem","Tags","PostListTitle","Link","to","PostListExcerpt","dangerouslySetInnerHTML","__html","PostListMeta","styled","ul","withConfig","displayName","componentId","li","h2","p","div","tag","Tag","str","match","x","toLowerCase","join","span","data","allMarkdownRemark","nodes","intro","markdownRemark","html","Layout","Intro"],"sourceRoot":""}